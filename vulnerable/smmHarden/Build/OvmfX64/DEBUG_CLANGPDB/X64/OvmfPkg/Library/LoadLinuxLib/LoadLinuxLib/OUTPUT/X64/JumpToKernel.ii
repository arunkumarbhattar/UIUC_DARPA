# 1 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/OvmfPkg/Library/LoadLinuxLib/X64/JumpToKernel.nasm"
# 1 "<built-in>" 1
# 361 "<built-in>"
# 1 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/LoadLinuxLib/LoadLinuxLib/DEBUG/AutoGen.h" 1
# 16 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/LoadLinuxLib/LoadLinuxLib/DEBUG/AutoGen.h"
# 1 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h" 1
# 21 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h"
# 1 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/X64/ProcessorBind.h" 1
# 35 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/X64/ProcessorBind.h"
#pragma GCC visibility push (hidden)
# 180 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/X64/ProcessorBind.h"
typedef unsigned long long UINT64;



typedef long long INT64;



typedef unsigned int UINT32;



typedef int INT32;



typedef unsigned short UINT16;




typedef unsigned short CHAR16;



typedef short INT16;




typedef unsigned char BOOLEAN;



typedef unsigned char UINT8;



typedef char CHAR8;



typedef signed char INT8;






typedef UINT64 UINTN;




typedef INT64 INTN;
# 22 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h" 2
# 213 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h"
typedef struct {
  UINT32 Data1;
  UINT16 Data2;
  UINT16 Data3;
  UINT8 Data4[8];
} GUID;




typedef struct {
  UINT8 Addr[4];
} IPv4_ADDRESS;




typedef struct {
  UINT8 Addr[16];
} IPv6_ADDRESS;




typedef UINT64 PHYSICAL_ADDRESS;




typedef struct _LIST_ENTRY LIST_ENTRY;




struct _LIST_ENTRY {
  LIST_ENTRY *ForwardLink;
  LIST_ENTRY *BackLink;
};
# 599 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h"
typedef __builtin_ms_va_list VA_LIST;
# 703 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h"
typedef UINTN *BASE_LIST;
# 774 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h"
_Static_assert (sizeof (BOOLEAN) == 1, "sizeof (BOOLEAN) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT8) == 1, "sizeof (INT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT8) == 1, "sizeof (UINT8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT16) == 2, "sizeof (INT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT16) == 2, "sizeof (UINT16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT32) == 4, "sizeof (INT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT32) == 4, "sizeof (UINT32) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (INT64) == 8, "sizeof (INT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (UINT64) == 8, "sizeof (UINT64) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR8) == 1, "sizeof (CHAR8) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (CHAR16) == 2, "sizeof (CHAR16) does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (L'A') == 2, "sizeof (L'A') does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (L"A") == 4, "sizeof (L\"A\") does not meet UEFI Specification Data Type requirements");
# 795 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h"
typedef enum {
  __VerifyUint8EnumValue = 0xff
} __VERIFY_UINT8_ENUM_SIZE;

typedef enum {
  __VerifyUint16EnumValue = 0xffff
} __VERIFY_UINT16_ENUM_SIZE;

typedef enum {
  __VerifyUint32EnumValue = 0xffffffff
} __VERIFY_UINT32_ENUM_SIZE;

_Static_assert (sizeof (__VERIFY_UINT8_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_UINT16_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
_Static_assert (sizeof (__VERIFY_UINT32_ENUM_SIZE) == 4, "Size of enum does not meet UEFI Specification Data Type requirements");
# 922 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/MdePkg/Include/Base.h"
typedef UINTN RETURN_STATUS;
# 17 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/LoadLinuxLib/LoadLinuxLib/DEBUG/AutoGen.h" 2

extern GUID gEfiCallerIdGuid;
extern GUID gEdkiiDscPlatformGuid;
extern CHAR8 *gEfiCallerBaseName;



extern UINT64 _gPcd_SkuId_Array[];
# 362 "<built-in>" 2
# 1 "/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/OvmfPkg/Library/LoadLinuxLib/X64/JumpToKernel.nasm" 2
;------------------------------------------------------------------------------
;
; Copyright (c) 2006 - 2013, Intel Corporation. All rights reserved.<BR>
;
; SPDX-License-Identifier: BSD-2-Clause-Patent
;
;------------------------------------------------------------------------------

  DEFAULT REL
  SECTION .text

;------------------------------------------------------------------------------
; void
;
; JumpToKernel (
; void *KernelStart,
; void *KernelBootParams
; );
;------------------------------------------------------------------------------
global JumpToKernel
JumpToKernel:

    ; Set up for executing kernel. BP in %esi, entry point on the stack
    ; (64-bit when the 'ret' will use it as 32-bit, but we're little-endian)
    mov rsi, rdx
    push rcx

    ; Jump into the compatibility mode CS
    push 0x10
    lea rax, [.0]
    push rax
    DB 0x48, 0xcb ; retfq

.0:
    ; Now in compatibility mode.

    DB 0xb8, 0x18, 0x0, 0x0, 0x0 ; movl $0x18, %eax
    DB 0x8e, 0xd8 ; movl %eax, %ds
    DB 0x8e, 0xc0 ; movl %eax, %es
    DB 0x8e, 0xe0 ; movl %eax, %fs
    DB 0x8e, 0xe8 ; movl %eax, %gs
    DB 0x8e, 0xd0 ; movl %eax, %ss

    ; Disable paging
    DB 0xf, 0x20, 0xc0 ; movl %cr0, %eax
    DB 0xf, 0xba, 0xf8, 0x1f ; btcl $31, %eax
    DB 0xf, 0x22, 0xc0 ; movl %eax, %cr0

    ; Disable long mode in EFER
    DB 0xb9, 0x80, 0x0, 0x0, 0xc0 ; movl $0x0c0000080, %ecx
    DB 0xf, 0x32 ; rdmsr
    DB 0xf, 0xba, 0xf8, 0x8 ; btcl $8, %eax
    DB 0xf, 0x30 ; wrmsr

    ; Disable PAE
    DB 0xf, 0x20, 0xe0 ; movl %cr4, %eax
    DB 0xf, 0xba, 0xf8, 0x5 ; btcl $5, %eax
    DB 0xf, 0x22, 0xe0 ; movl %eax, %cr4

    DB 0x31, 0xed ; xor %ebp, %ebp
    DB 0x31, 0xff ; xor %edi, %edi
    DB 0x31, 0xdb ; xor %ebx, %ebx
    DB 0xc3 ; ret

;------------------------------------------------------------------------------
; void
;
; JumpToUefiKernel (
; EFI_HANDLE ImageHandle,
; EFI_SYSTEM_TABLE *SystemTable,
; void *KernelBootParams
; void *KernelStart,
; );
;------------------------------------------------------------------------------
global JumpToUefiKernel
JumpToUefiKernel:

    mov rdi, rcx
    mov rsi, rdx
    mov rdx, r8
    xor rax, rax
    mov eax, [r8 + 0x264]
    add r9, rax
    add r9, 0x200
    call r9
    ret
