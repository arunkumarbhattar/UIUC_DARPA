#
# DO NOT EDIT
# This file is auto-generated by build utility
#
# Module Name:
#
#   GNUmakefile
#
# Abstract:
#
#   Auto-generated makefile for building modules, libraries or platform
#
    

#
# Platform Macro Definition
#
PLATFORM_NAME = Ovmf
PLATFORM_GUID = 5a9e7754-d81b-49ea-85ad-69eaa7b1539b
PLATFORM_VERSION = 0.1
PLATFORM_RELATIVE_DIR = OvmfPkg
PLATFORM_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/OvmfPkg
PLATFORM_OUTPUT_DIR = Build/OvmfX64

#
# Module Macro Definition
#
MODULE_NAME = MemEncryptTdxLib
MODULE_GUID = 7E6651B2-B775-4593-A410-FC05B8C61993
MODULE_NAME_GUID = MemEncryptTdxLib
MODULE_VERSION = 1.0
MODULE_TYPE = BASE
MODULE_FILE = BaseMemEncryptTdxLib.inf
MODULE_FILE_BASE_NAME = BaseMemEncryptTdxLib
BASE_NAME = $(MODULE_NAME)
MODULE_RELATIVE_DIR = OvmfPkg/Library/BaseMemEncryptTdxLib
PACKAGE_RELATIVE_DIR = Library/BaseMemEncryptTdxLib
MODULE_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/OvmfPkg/Library/BaseMemEncryptTdxLib
FFS_OUTPUT_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/FV/Ffs/7E6651B2-B775-4593-A410-FC05B8C61993MemEncryptTdxLib

MODULE_ENTRY_POINT = _ModuleEntryPoint
ARCH_ENTRY_POINT = _ModuleEntryPoint
IMAGE_ENTRY_POINT = _ModuleEntryPoint

INF_VERSION = 1.25
BASE_NAME = MemEncryptTdxLib
FILE_GUID = 7E6651B2-B775-4593-A410-FC05B8C61993
MODULE_TYPE = BASE
VERSION_STRING = 1.0

#
# Build Configuration Macro Definition
#
ARCH = X64
TOOLCHAIN = CLANGPDB
TOOLCHAIN_TAG = CLANGPDB
TARGET = DEBUG

#
# Build Directory Macro Definition
#
# PLATFORM_BUILD_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB
BUILD_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB
BIN_DIR = $(BUILD_DIR)/X64
LIB_DIR = $(BIN_DIR)
MODULE_BUILD_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/BaseMemEncryptTdxLib/BaseMemEncryptTdxLib
OUTPUT_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/BaseMemEncryptTdxLib/BaseMemEncryptTdxLib/OUTPUT
DEBUG_DIR = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/BaseMemEncryptTdxLib/BaseMemEncryptTdxLib/DEBUG
DEST_DIR_OUTPUT = $(OUTPUT_DIR)
DEST_DIR_DEBUG = $(DEBUG_DIR)

#
# Shell Command Macro
#
CP = cp -f
MV = mv -f
RM = rm -f
MD = mkdir -p
RD = rm -r -f


#
# Tools definitions specific to this module
#
APP_BUILDRULEFAMILY =  CLANGPDB
APP_FLAGS = 

ASL_BUILDRULEFAMILY =  CLANGPDB
ASL_FLAGS = 
ASL_OUTFLAGS =  -p
ASL = iasl

ASLCC_BUILDRULEFAMILY =  CLANGPDB
ASLCC_FLAGS = -x c -m64 -fno-lto -target x86_64-unknown-windows-gnu
ASLCC = clang

ASLDLINK_BUILDRULEFAMILY =  CLANGPDB
ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
ASLDLINK = lld-link

ASLPP_BUILDRULEFAMILY =  CLANGPDB
ASLPP_FLAGS = -x c -E -include AutoGen.h -target x86_64-unknown-windows-gnu
ASLPP = clang

ASM_BUILDRULEFAMILY =  CLANGPDB
ASM_FLAGS = -c -x assembler -imacros AutoGen.h -m64 -target x86_64-unknown-windows-gnu
ASM = clang

ASMLINK_BUILDRULEFAMILY =  CLANGPDB
ASMLINK_FLAGS = /nologo /tiny
ASMLINK = bin16\link16.exe

BROTLI_BUILDRULEFAMILY =  CLANGPDB
BROTLI_GUID =  3D532050-5CDA-4FD0-879E-0F7F630D5AFB
BROTLI = BrotliCompress

CC_BUILDRULEFAMILY =  CLANGPDB
CC_FLAGS = -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-check-bounds-decls-unchecked-scope -Wno-check-bounds-decls-checked-scope -Wno-array-bounds -include AutoGen.h -fno-common -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -Wno-parentheses-equality -Wno-tautological-compare -Wno-tautological-constant-out-of-range-compare -Wno-empty-body -Wno-unused-const-variable -Wno-varargs -Wno-unknown-warning-option -Wno-microsoft-enum-forward-reference -fno-stack-protector -funsigned-char -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -Wno-address -Wno-shift-negative-value -Wno-unknown-pragmas -Wno-incompatible-library-redeclaration -Wno-null-dereference -mno-implicit-float -mms-bitfields -mno-stack-arg-probe -nostdlib -nostdlibinc -fseh-exceptions -Wno-check-bounds-decls-unchecked-scope -Wno-check-bounds-decls-checked-scope -m64 "-DEFIAPI=__attribute__((ms_abi))" -mno-red-zone -mcmodel=small -Oz -flto -target x86_64-unknown-windows-gnu -gcodeview -funwind-tables -D DISABLE_NEW_DEPRECATED_INTERFACES -D TDX_GUEST_SUPPORTED -D ENABLE_MD5_DEPRECATED_INTERFACES
CC = clang

CRC32_BUILDRULEFAMILY =  CLANGPDB
CRC32_GUID =  FC1BCDB0-7D31-49AA-936A-A4600D9DD083
CRC32 = GenCrc32

DEPS_BUILDRULEFAMILY =  CLANGPDB
DEPS_FLAGS = -MMD -MF $@.deps

DLINK_BUILDRULEFAMILY =  CLANGPDB
DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /ALIGN:32 /FILEALIGN:32 /Machine:X64 /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DEBUG:GHASH /MLLVM:-exception-model=wineh /lldmap
DLINK = lld-link

DLINK2_BUILDRULEFAMILY =  CLANGPDB
DLINK2_FLAGS = 

DTC_BUILDRULEFAMILY =  CLANGPDB
DTC_FLAGS = -H epapr
DTC = dtc

DTCPP_BUILDRULEFAMILY =  CLANGPDB
DTCPP = cpp

GENFW_BUILDRULEFAMILY =  CLANGPDB
GENFW_FLAGS = --keepexceptiontable
GENFW = GenFw

LZMA_BUILDRULEFAMILY =  CLANGPDB
LZMA_GUID =  EE4E5898-3914-4259-9D6E-DC7BD79403CF
LZMA = LzmaCompress

LZMAF86_BUILDRULEFAMILY =  CLANGPDB
LZMAF86_GUID =  D42AE6BD-1352-4bfb-909A-CA72A6EAE889
LZMAF86 = LzmaF86Compress

MAKE = make

NASM_BUILDRULEFAMILY =  CLANGPDB
NASM_FLAGS = -f win64
NASM = nasm

NASMB_BUILDRULEFAMILY =  CLANGPDB
NASMB_FLAGS = -f bin

OBJCOPY_ADDDEBUGFLAG =  --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
OBJCOPY_BUILDRULEFAMILY =  CLANGPDB
OBJCOPY_FLAGS = 
OBJCOPY = echo
OBJCOPY_STRIPFLAG =  --strip-unneeded -R .eh_frame

OPTROM_BUILDRULEFAMILY =  CLANGPDB
OPTROM_FLAGS = -e
OPTROM = EfiRom

PKCS7SIGN_BUILDRULEFAMILY =  CLANGPDB
PKCS7SIGN_GUID =  4AAFD29D-68DF-49EE-8AA9-347D375665A7
PKCS7SIGN = Pkcs7Sign

PP_BUILDRULEFAMILY =  CLANGPDB
PP_FLAGS = -E -x assembler-with-cpp -include AutoGen.h -DOPENSBI_EXTERNAL_SBI_TYPES=OpensbiTypes.h -target x86_64-unknown-windows-gnu
PP = clang

RC_BUILDRULEFAMILY =  CLANGPDB
RC = llvm-rc

RSA2048SHA256SIGN_BUILDRULEFAMILY =  CLANGPDB
RSA2048SHA256SIGN_GUID =  A7717414-C616-4977-9420-844712A735BF
RSA2048SHA256SIGN = Rsa2048Sha256Sign

SLINK_BUILDRULEFAMILY =  CLANGPDB
SLINK = llvm-lib

SYMRENAME_BUILDRULEFAMILY =  CLANGPDB
SYMRENAME_FLAGS = Symbol renaming not needed for
SYMRENAME = echo

TIANO_BUILDRULEFAMILY =  CLANGPDB
TIANO_GUID =  A31280AD-481E-41B6-95E8-127F4C984779
TIANO = TianoCompress

VFR_BUILDRULEFAMILY =  CLANGPDB
VFR_FLAGS = -l -n
VFR = VfrCompile

VFRPP_BUILDRULEFAMILY =  CLANGPDB
VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h -target x86_64-unknown-windows-gnu
VFRPP = clang

VPDTOOL_BUILDRULEFAMILY =  CLANGPDB
VPDTOOL_GUID =  8C3D856A-9BE6-468E-850A-24F7A8D38E08
VPDTOOL = BPDG


MAKE_FILE = $(MODULE_BUILD_DIR)/GNUmakefile

#
# Build Macro
#
OBJECT_FILES =  \
    $(OUTPUT_DIR)/MemoryEncryption.obj

INC =  \
    -I$(WORKSPACE)/OvmfPkg/Library/BaseMemEncryptTdxLib \
    -I$(DEBUG_DIR) \
    -I$(WORKSPACE)/MdeModulePkg \
    -I$(WORKSPACE)/MdeModulePkg/Include \
    -I$(WORKSPACE)/MdePkg \
    -I$(WORKSPACE)/MdePkg/Include \
    -I$(WORKSPACE)/MdePkg/Test/UnitTest/Include \
    -I$(WORKSPACE)/MdePkg/Include/X64 \
    -I$(WORKSPACE)/OvmfPkg \
    -I$(WORKSPACE)/OvmfPkg/Include \
    -I$(WORKSPACE)/OvmfPkg/Csm/Include

OBJECT_FILES_LIST = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/BaseMemEncryptTdxLib/BaseMemEncryptTdxLib/OUTPUT/object_files.lst


#
# Overridable Target Macro Definitions
#
FORCE_REBUILD = force_build
INIT_TARGET = init
PCH_TARGET =
BC_TARGET = 
CODA_TARGET = /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/BaseMemEncryptTdxLib/BaseMemEncryptTdxLib/OUTPUT/MemEncryptTdxLib.lib \
              

#
# Default target, which will build dependent libraries in addition to source files
#

all: mbuild


#
# Target used when called from platform makefile, which will bypass the build of dependent libraries
#

pbuild: $(INIT_TARGET) $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# ModuleTarget
#

mbuild: $(INIT_TARGET) $(BC_TARGET) gen_libs $(PCH_TARGET) $(CODA_TARGET)

#
# Build Target used in multi-thread build mode, which will bypass the init and gen_libs targets
#

tbuild: $(BC_TARGET) $(PCH_TARGET) $(CODA_TARGET)

#
# Phony target which is used to force executing commands for a target
#
force_build:
	-@

#
# Target to update the FD
#

fds: mbuild gen_fds

#
# Initialization target: print build information and create necessary directories
#
init: info dirs

info:
	-@echo Building ... $(MODULE_DIR)/$(MODULE_FILE) [$(ARCH)]

dirs:
	-@$(MD) $(DEBUG_DIR)
	-@$(MD) $(OUTPUT_DIR)


strdefs:
	-@$(CP) $(DEBUG_DIR)/AutoGen.h $(DEBUG_DIR)/$(MODULE_NAME)StrDefs.h

#
# GenLibsTarget
#
gen_libs:
	@cd $(MODULE_BUILD_DIR)

#
# Build Flash Device Image
#
gen_fds:
	@"$(MAKE)" $(MAKE_FLAGS) -f $(BUILD_DIR)/GNUmakefile fds
	@cd $(MODULE_BUILD_DIR)

include $(MODULE_BUILD_DIR)/dependency
include $(MODULE_BUILD_DIR)/deps_target

#
# Individual Object Build Targets
#
$(OUTPUT_DIR)/MemoryEncryption.obj : $(MAKE_FILE)
$(OUTPUT_DIR)/MemoryEncryption.obj : $(DEBUG_DIR)/AutoGen.h
$(OUTPUT_DIR)/MemoryEncryption.obj : $(WORKSPACE)/OvmfPkg/Library/BaseMemEncryptTdxLib/MemoryEncryption.c
	"$(CC)" $(DEPS_FLAGS) $(CC_FLAGS) -c -o /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/BaseMemEncryptTdxLib/BaseMemEncryptTdxLib/OUTPUT/./MemoryEncryption.obj $(INC) /home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/OvmfPkg/Library/BaseMemEncryptTdxLib/MemoryEncryption.c

$(OUTPUT_DIR)/MemEncryptTdxLib.lib : $(OBJECT_FILES)
$(OUTPUT_DIR)/MemEncryptTdxLib.lib : $(OBJECT_FILES_LIST)
	"$(SLINK)" $(SLINK_FLAGS) /OUT:/home/arun/Desktop/darpa_ex1/3C/darpa_demo_edk2/Build/OvmfX64/DEBUG_CLANGPDB/X64/OvmfPkg/Library/BaseMemEncryptTdxLib/BaseMemEncryptTdxLib/OUTPUT/MemEncryptTdxLib.lib @$(OBJECT_FILES_LIST)



#
# clean all intermediate files
#
clean:
	$(RD) $(OUTPUT_DIR)
		$(RM) AutoGenTimeStamp

#
# clean all generated files
#
cleanall:
	$(RD) $(DEBUG_DIR)
	$(RD) $(OUTPUT_DIR)
	$(RM) *.pdb *.idb > NUL 2>&1
	$(RM) $(BIN_DIR)/$(MODULE_NAME).efi
	$(RM) AutoGenTimeStamp

#
# clean all dependent libraries built
#
cleanlib:
	@cd $(MODULE_BUILD_DIR)

