## @file
# This module produces the UEFI boot service GetNextMonotonicCount() and runtime service GetNextHighMonotonicCount().
#
# Copyright (c) 2006 - 2018, Intel Corporation. All rights reserved.<BR>
#
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
#
##

# DO NOT EDIT
# FILE auto-generated

[Defines]
  INF_VERSION                = 0x00010017
  BASE_NAME                  = MonotonicCounterRuntimeDxe
  FILE_GUID                  = AD608272-D07F-4964-801E-7BD3B7888652
  MODULE_TYPE                = DXE_RUNTIME_DRIVER
  VERSION_STRING             = 1.0
  ENTRY_POINT                = MonotonicCounterDriverInitialize
  MODULE_UNI_FILE            = MonotonicCounterRuntimeDxe.uni

[Packages.X64]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec

[Binaries.X64]
  PE32|MonotonicCounterRuntimeDxe.efi
  DXE_DEPEX|MonotonicCounterRuntimeDxe.depex

[PatchPcd.X64]

[Protocols.X64]
  ## PRODUCES
  gEfiMonotonicCounterArchProtocolGuid

  ## SOMETIMES_CONSUMES
  gPcdProtocolGuid

  ## CONSUMES
  gEfiPcdProtocolGuid

  ## SOMETIMES_CONSUMES
  gGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiGetPcdInfoProtocolGuid

  ## SOMETIMES_CONSUMES
  gEfiLoadedImageProtocolGuid


[Ppis.X64]

[Guids.X64]
  ## PRODUCES ## Variable:L"MTC"
  ## CONSUMES ## Variable:L"MTC"
  gMtcVendorGuid


[PcdEx.X64]

[LibraryClasses.X64]
## @LIB_INSTANCES
#  MdePkg/Library/RegisterFilterLibNull/RegisterFilterLibNull.inf
#  MdePkg/Library/BaseMemoryLibRepStr/BaseMemoryLibRepStr.inf
#  MdePkg/Library/DxePcdLib/DxePcdLib.inf
#  MdePkg/Library/BaseLib/BaseLib.inf
#  MdePkg/Library/TdxLib/TdxLib.inf
#  OvmfPkg/Library/CcProbeLib/CcProbeLib.inf
#  MdePkg/Library/BaseDebugPrintErrorLevelLib/BaseDebugPrintErrorLevelLib.inf
#  MdePkg/Library/BasePrintLib/BasePrintLib.inf
#  MdePkg/Library/BaseIoLibIntrinsic/BaseIoLibIntrinsicSev.inf
#  OvmfPkg/Library/PlatformDebugLibIoPort/PlatformDebugLibIoPort.inf
#  MdePkg/Library/UefiBootServicesTableLib/UefiBootServicesTableLib.inf
#  MdePkg/Library/UefiRuntimeServicesTableLib/UefiRuntimeServicesTableLib.inf
#  MdePkg/Library/UefiRuntimeLib/UefiRuntimeLib.inf
#  MdePkg/Library/UefiDriverEntryPoint/UefiDriverEntryPoint.inf

[Depex.X64]
#  (gEfiVariableArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiPcdProtocolGuid) AND (gEfiBdsArchProtocolGuid AND gEfiCpuArchProtocolGuid AND gEfiMetronomeArchProtocolGuid AND gEfiMonotonicCounterArchProtocolGuid AND gEfiRealTimeClockArchProtocolGuid AND gEfiResetArchProtocolGuid AND gEfiRuntimeArchProtocolGuid AND gEfiSecurityArchProtocolGuid AND gEfiTimerArchProtocolGuid AND gEfiVariableWriteArchProtocolGuid AND gEfiVariableArchProtocolGuid AND gEfiWatchdogTimerArchProtocolGuid)

[UserExtensions.TianoCore."ExtraFiles"]
MonotonicCounterRuntimeDxeExtra.uni



#
# The following information is for reference only and not required by the build tools.
#
#  VALID_ARCHITECTURES           = IA32 X64 EBC
#

[BuildOptions.X64]
## @AsBuilt
##   GCC:DEBUG_CLANGPDB_X64_ASLPP_FLAGS = -x c -E -include AutoGen.h -target x86_64-unknown-windows-gnu
##   GCC:DEBUG_CLANGPDB_X64_ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
##   GCC:DEBUG_CLANGPDB_X64_GENFW_FLAGS = --keepexceptiontable
##   GCC:DEBUG_CLANGPDB_X64_OBJCOPY_FLAGS = 
##   GCC:DEBUG_CLANGPDB_X64_DEPS_FLAGS = -MMD -MF $@.deps
##   GCC:DEBUG_CLANGPDB_X64_ASM_FLAGS = -c -x assembler -imacros AutoGen.h -m64 -target x86_64-unknown-windows-gnu
##   GCC:DEBUG_CLANGPDB_X64_CC_FLAGS = -g -Os -fshort-wchar -fno-builtin -fno-strict-aliasing -Wall -Werror -Wno-check-bounds-decls-unchecked-scope -Wno-check-bounds-decls-checked-scope -Wno-array-bounds -include AutoGen.h -fno-common -ffunction-sections -fdata-sections -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings -Wno-parentheses-equality -Wno-tautological-compare -Wno-tautological-constant-out-of-range-compare -Wno-empty-body -Wno-unused-const-variable -Wno-varargs -Wno-unknown-warning-option -Wno-microsoft-enum-forward-reference -fno-stack-protector -funsigned-char -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang -Wno-address -Wno-shift-negative-value -Wno-unknown-pragmas -Wno-incompatible-library-redeclaration -Wno-null-dereference -mno-implicit-float -mms-bitfields -mno-stack-arg-probe -nostdlib -nostdlibinc -fseh-exceptions -Wno-check-bounds-decls-unchecked-scope -Wno-check-bounds-decls-checked-scope -m64 "-DEFIAPI=__attribute__((ms_abi))" -mno-red-zone -mcmodel=small -Oz -flto -target x86_64-unknown-windows-gnu -gcodeview  -funwind-tables -D DISABLE_NEW_DEPRECATED_INTERFACES -D TDX_GUEST_SUPPORTED -D ENABLE_MD5_DEPRECATED_INTERFACES
##   GCC:DEBUG_CLANGPDB_X64_ASMLINK_FLAGS = /nologo /tiny
##   GCC:DEBUG_CLANGPDB_X64_VFR_FLAGS = -l -n
##   GCC:DEBUG_CLANGPDB_X64_ASLCC_FLAGS = -x c -m64 -fno-lto -target x86_64-unknown-windows-gnu
##   GCC:DEBUG_CLANGPDB_X64_APP_FLAGS = 
##   GCC:DEBUG_CLANGPDB_X64_NASM_FLAGS = -f win64
##   GCC:DEBUG_CLANGPDB_X64_OPTROM_FLAGS = -e
##   GCC:DEBUG_CLANGPDB_X64_DTC_FLAGS = -H epapr
##   GCC:DEBUG_CLANGPDB_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   GCC:DEBUG_CLANGPDB_X64_PP_FLAGS = -E -x assembler-with-cpp -include AutoGen.h -DOPENSBI_EXTERNAL_SBI_TYPES=OpensbiTypes.h -target x86_64-unknown-windows-gnu
##   GCC:DEBUG_CLANGPDB_X64_VFRPP_FLAGS = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h -target x86_64-unknown-windows-gnu
##   GCC:DEBUG_CLANGPDB_X64_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /ALIGN:32 /FILEALIGN:32 /Machine:X64 /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DEBUG:GHASH /MLLVM:-exception-model=wineh /lldmap /ALIGN:4096
##   GCC:DEBUG_CLANGPDB_X64_ASL_FLAGS = 
##   GCC:DEBUG_CLANGPDB_X64_NASMB_FLAGS = -f bin
##   GCC:DEBUG_CLANGPDB_X64_DLINK2_FLAGS = 
